function checkFile(e){function l(e,t){for(var n=t;n;n=n.prev)if(e in n.vars)return true}function c(e,t){if(e.type=="Identifier"&&!(e.name in f)&&!l(e.name,t)){f[e.name]=true;fail("Assignment to global variable",e.loc)}}function h(e){if(!e.init||e.init.type!="VariableDeclaration")return;var t=e.init.declarations[0].id.name;walk.recursive(e.body,null,{Function:function(){},VariableDeclaration:function(e,n,r){for(var i=0;i<e.declarations.length;i++)if(e.declarations[i].id.name==t)fail("redefined loop variable",e.declarations[i].id.loc);walk.base.VariableDeclaration(e,n,r)}})}var t=fs.readFileSync(e,"utf8"),n;if(n=t.match(/[\x00-\x08\x0b\x0c\x0e-\x19\uFEFF\t]|[ \t]\n/)){var r;if(n[0]=="	")r="Found tab character";else if(n[0].indexOf("\n")>-1)r="Trailing whitespace";else r="Undesirable character "+n[0].charCodeAt(0);var i=acorn.getLineInfo(t,n.index);fail(r+" at line "+i.line+", column "+i.column,{source:e})}var s=Object.create(null);try{var o=acorn.parse(t,{locations:true,ecmaVersion:3,strictSemicolons:true,allowTrailingCommas:false,forbidReserved:"everywhere",sourceFile:e})}catch(u){fail(u.message,{source:e});return}var a=[];walk.simple(o,{ScopeBody:function(e,t){e.scope=t;a.push(t)}},walk.scopeVisitor,{vars:Object.create(null)});var f=Object.create(null);walk.simple(o,{UpdateExpression:function(e,t){c(e.argument,t)},AssignmentExpression:function(e,t){c(e.left,t)},Identifier:function(e,t){if(e.name=="arguments")return;for(var n=t;n;n=n.prev)if(e.name in n.vars){n.vars[e.name].used=true;return}s[e.name]=e.loc},FunctionExpression:function(e){if(e.id)fail("Named function expression",e.loc)},ForStatement:function(e){h(e)},MemberExpression:function(e){if(e.object.type=="Identifier"&&e.object.name=="console"&&!e.computed)fail("Found console."+e.property.name,e.loc)},DebuggerStatement:function(e){fail("Found debugger statement",e.loc)}},scopePasser);var p=Object.create(topAllowedGlobals),d;if(d=t.match(/\/\/ declare global:\s+(.*)/))d[1].split(/,\s*/g).forEach(function(e){p[e]=true});for(var v in s)if(!(v in p))fail("Access to global variable "+v+". Add a '// declare global: "+v+"' comment or add this variable in test/lint/lint.js.",s[v]);for(var m=0;m<a.length;++m){var g=a[m];for(var y in g.vars){var i=g.vars[y];if(!i.used&&i.type!="catch clause"&&i.type!="function name"&&y.charAt(0)!="_")fail("Unused "+i.type+" "+y,i.node.loc)}}}function fail(e,t){if(t.start)e+=" ("+t.start.line+":"+t.start.column+")";console.log(t.source+": "+e);failed=true}function checkDir(e){fs.readdirSync(e).forEach(function(t){var n=e+"/"+t;if(/\.js$/.test(t))checkFile(n);else if(t!="dep"&&fs.lstatSync(n).isDirectory())checkDir(n)})}var topAllowedGlobals=Object.create(null);("Error RegExp Number String Array Function Object Math Date undefined "+"parseInt parseFloat Infinity NaN isNaN "+"window document navigator prompt alert confirm console "+"FileReader Worker postMessage importScripts "+"setInterval clearInterval setTimeout clearTimeout "+"CodeMirror "+"test exports require module define").split(" ").forEach(function(e){topAllowedGlobals[e]=true});var fs=require("fs"),acorn=require("./acorn.js"),walk=require("./walk.js");var scopePasser=walk.make({ScopeBody:function(e,t,n){n(e,e.scope)}});var failed=false;exports.checkDir=checkDir;exports.checkFile=checkFile;exports.success=function(){return!failed}