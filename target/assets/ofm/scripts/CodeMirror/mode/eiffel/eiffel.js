(function(e){if(typeof exports=="object"&&typeof module=="object")e(require("../../lib/codemirror"));else if(typeof define=="function"&&define.amd)define(["../../lib/codemirror"],e);else e(CodeMirror)})(function(e){"use strict";e.defineMode("eiffel",function(){function e(e){var t={};for(var n=0,r=e.length;n<r;++n)t[e[n]]=true;return t}function i(e,t,n){n.tokenize.push(e);return e(t,n)}function s(e,t){r=null;if(e.eatSpace())return null;var n=e.next();if(n=='"'||n=="'"){return i(o(n,"string"),e,t)}else if(n=="-"&&e.eat("-")){e.skipToEnd();return"comment"}else if(n==":"&&e.eat("=")){return"operator"}else if(/[0-9]/.test(n)){e.eatWhile(/[xXbBCc0-9\.]/);e.eat(/[\?\!]/);return"ident"}else if(/[a-zA-Z_0-9]/.test(n)){e.eatWhile(/[a-zA-Z_0-9]/);e.eat(/[\?\!]/);return"ident"}else if(/[=+\-\/*^%<>~]/.test(n)){e.eatWhile(/[=+\-\/*^%<>~]/);return"operator"}else{return null}}function o(e,t,n){return function(r,i){var s=false,o;while((o=r.next())!=null){if(o==e&&(n||!s)){i.tokenize.pop();break}s=!s&&o=="%"}return t}}var t=e(["note","across","when","variant","until","unique","undefine","then","strip","select","retry","rescue","require","rename","reference","redefine","prefix","once","old","obsolete","loop","local","like","is","inspect","infix","include","if","frozen","from","external","export","ensure","end","elseif","else","do","creation","create","check","alias","agent","separate","invariant","inherit","indexing","feature","expanded","deferred","class","Void","True","Result","Precursor","False","Current","create","attached","detachable","as","and","implies","not","or"]);var n=e([":=","and then","and","or","<<",">>"]);var r;return{startState:function(){return{tokenize:[s]}},token:function(e,r){var i=r.tokenize[r.tokenize.length-1](e,r);if(i=="ident"){var s=e.current();i=t.propertyIsEnumerable(e.current())?"keyword":n.propertyIsEnumerable(e.current())?"operator":/^[A-Z][A-Z_0-9]*$/g.test(s)?"tag":/^0[bB][0-1]+$/g.test(s)?"number":/^0[cC][0-7]+$/g.test(s)?"number":/^0[xX][a-fA-F0-9]+$/g.test(s)?"number":/^([0-9]+\.[0-9]*)|([0-9]*\.[0-9]+)$/g.test(s)?"number":/^[0-9]+$/g.test(s)?"number":"variable"}return i},lineComment:"--"}});e.defineMIME("text/x-eiffel","eiffel")})