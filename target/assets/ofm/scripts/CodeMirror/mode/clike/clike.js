(function(e){if(typeof exports=="object"&&typeof module=="object")e(require("../../lib/codemirror"));else if(typeof define=="function"&&define.amd)define(["../../lib/codemirror"],e);else e(CodeMirror)})(function(e){"use strict";e.defineMode("clike",function(t,n){function d(e,t){var n=e.next();if(l[n]){var r=l[n](e,t);if(r!==false)return r}if(n=='"'||n=="'"){t.tokenize=v(n);return t.tokenize(e,t)}if(/[\[\]{}\(\),;\:\.]/.test(n)){p=n;return null}if(/\d/.test(n)){e.eatWhile(/[\w\.]/);return"number"}if(n=="/"){if(e.eat("*")){t.tokenize=m;return m(e,t)}if(e.eat("/")){e.skipToEnd();return"comment"}}if(h.test(n)){e.eatWhile(h);return"operator"}e.eatWhile(/[\w\$_]/);var i=e.current();if(o.propertyIsEnumerable(i)){if(a.propertyIsEnumerable(i))p="newstatement";return"keyword"}if(u.propertyIsEnumerable(i)){if(a.propertyIsEnumerable(i))p="newstatement";return"builtin"}if(f.propertyIsEnumerable(i))return"atom";return"variable"}function v(e){return function(t,n){var r=false,i,s=false;while((i=t.next())!=null){if(i==e&&!r){s=true;break}r=!r&&i=="\\"}if(s||!(r||c))n.tokenize=null;return"string"}}function m(e,t){var n=false,r;while(r=e.next()){if(r=="/"&&n){t.tokenize=null;break}n=r=="*"}return"comment"}function g(e,t,n,r,i){this.indented=e;this.column=t;this.type=n;this.align=r;this.prev=i}function y(e,t,n){var r=e.indented;if(e.context&&e.context.type=="statement")r=e.context.indented;return e.context=new g(r,t,n,null,e.context)}function b(e){var t=e.context.type;if(t==")"||t=="]"||t=="}")e.indented=e.context.indented;return e.context=e.context.prev}var r=t.indentUnit,i=n.statementIndentUnit||r,s=n.dontAlignCalls,o=n.keywords||{},u=n.builtin||{},a=n.blockKeywords||{},f=n.atoms||{},l=n.hooks||{},c=n.multiLineStrings;var h=/[+\-*&%=<>!?|\/]/;var p;return{startState:function(e){return{tokenize:null,context:new g((e||0)-r,0,"top",false),indented:0,startOfLine:true}},token:function(e,t){var n=t.context;if(e.sol()){if(n.align==null)n.align=false;t.indented=e.indentation();t.startOfLine=true}if(e.eatSpace())return null;p=null;var r=(t.tokenize||d)(e,t);if(r=="comment"||r=="meta")return r;if(n.align==null)n.align=true;if((p==";"||p==":"||p==",")&&n.type=="statement")b(t);else if(p=="{")y(t,e.column(),"}");else if(p=="[")y(t,e.column(),"]");else if(p=="(")y(t,e.column(),")");else if(p=="}"){while(n.type=="statement")n=b(t);if(n.type=="}")n=b(t);while(n.type=="statement")n=b(t)}else if(p==n.type)b(t);else if((n.type=="}"||n.type=="top")&&p!=";"||n.type=="statement"&&p=="newstatement")y(t,e.column(),"statement");t.startOfLine=false;return r},indent:function(t,n){if(t.tokenize!=d&&t.tokenize!=null)return e.Pass;var o=t.context,u=n&&n.charAt(0);if(o.type=="statement"&&u=="}")o=o.prev;var a=u==o.type;if(o.type=="statement")return o.indented+(u=="{"?0:i);else if(o.align&&(!s||o.type!=")"))return o.column+(a?0:1);else if(o.type==")"&&!a)return o.indented+i;else return o.indented+(a?0:r)},electricChars:"{}",blockCommentStart:"/*",blockCommentEnd:"*/",lineComment:"//",fold:"brace"}});(function(){function t(e){var t={},n=e.split(" ");for(var r=0;r<n.length;++r)t[n[r]]=true;return t}function r(e,t){if(!t.startOfLine)return false;for(;;){if(e.skipTo("\\")){e.next();if(e.eol()){t.tokenize=r;break}}else{e.skipToEnd();t.tokenize=null;break}}return"meta"}function i(e,t){e.backUp(1);if(e.match(/(R|u8R|uR|UR|LR)/)){var n=e.match(/"(.{0,16})\(/);if(!n){return false}t.cpp11RawStringDelim=n[1];t.tokenize=o;return o(e,t)}if(e.match(/(u8|u|U|L)/)){if(e.match(/["']/,false)){return"string"}return false}e.next();return false}function s(e,t){var n;while((n=e.next())!=null){if(n=='"'&&!e.eat('"')){t.tokenize=null;break}}return"string"}function o(e,t){var n=new RegExp(".*?\\)"+t.cpp11RawStringDelim+'"');var r=e.match(n);if(r){t.tokenize=null}else{e.skipToEnd()}return"string"}function u(t,n){function i(e){if(e)for(var t in e)if(e.hasOwnProperty(t))r.push(t)}var r=[];i(n.keywords);i(n.builtin);i(n.atoms);if(r.length){n.helperType=t[0];e.registerHelper("hintWords",t[0],r)}for(var s=0;s<t.length;++s)e.defineMIME(t[s],n)}var n="auto if break int case long char register continue return default short do sizeof "+"double static else struct entry switch extern typedef float union for unsigned "+"goto while enum void const signed volatile";u(["text/x-csrc","text/x-c","text/x-chdr"],{name:"clike",keywords:t(n),blockKeywords:t("case do else for if switch while struct"),atoms:t("null"),hooks:{"#":r},modeProps:{fold:["brace","include"]}});u(["text/x-c++src","text/x-c++hdr"],{name:"clike",keywords:t(n+" asm dynamic_cast namespace reinterpret_cast try bool explicit new "+"static_cast typeid catch operator template typename class friend private "+"this using const_cast inline public throw virtual delete mutable protected "+"wchar_t alignas alignof constexpr decltype nullptr noexcept thread_local final "+"static_assert override"),blockKeywords:t("catch class do else finally for if struct switch try while"),atoms:t("true false null"),hooks:{"#":r,u:i,U:i,L:i,R:i},modeProps:{fold:["brace","include"]}});e.defineMIME("text/x-java",{name:"clike",keywords:t("abstract assert boolean break byte case catch char class const continue default "+"do double else enum extends final finally float for goto if implements import "+"instanceof int interface long native new package private protected public "+"return short static strictfp super switch synchronized this throw throws transient "+"try void volatile while"),blockKeywords:t("catch class do else finally for if switch try while"),atoms:t("true false null"),hooks:{"@":function(e){e.eatWhile(/[\w\$_]/);return"meta"}},modeProps:{fold:["brace","import"]}});e.defineMIME("text/x-csharp",{name:"clike",keywords:t("abstract as base break case catch checked class const continue"+" default delegate do else enum event explicit extern finally fixed for"+" foreach goto if implicit in interface internal is lock namespace new"+" operator out override params private protected public readonly ref return sealed"+" sizeof stackalloc static struct switch this throw try typeof unchecked"+" unsafe using virtual void volatile while add alias ascending descending dynamic from get"+" global group into join let orderby partial remove select set value var yield"),blockKeywords:t("catch class do else finally for foreach if struct switch try while"),builtin:t("Boolean Byte Char DateTime DateTimeOffset Decimal Double"+" Guid Int16 Int32 Int64 Object SByte Single String TimeSpan UInt16 UInt32"+" UInt64 bool byte char decimal double short int long object"+" sbyte float string ushort uint ulong"),atoms:t("true false null"),hooks:{"@":function(e,t){if(e.eat('"')){t.tokenize=s;return s(e,t)}e.eatWhile(/[\w\$_]/);return"meta"}}});e.defineMIME("text/x-scala",{name:"clike",keywords:t("abstract case catch class def do else extends false final finally for forSome if "+"implicit import lazy match new null object override package private protected return "+"sealed super this throw trait try trye type val var while with yield _ : = => <- <: "+"<% >: # @ "+"assert assume require print println printf readLine readBoolean readByte readShort "+"readChar readInt readLong readFloat readDouble "+"AnyVal App Application Array BufferedIterator BigDecimal BigInt Char Console Either "+"Enumeration Equiv Error Exception Fractional Function IndexedSeq Integral Iterable "+"Iterator List Map Numeric Nil NotNull Option Ordered Ordering PartialFunction PartialOrdering "+"Product Proxy Range Responder Seq Serializable Set Specializable Stream StringBuilder "+"StringContext Symbol Throwable Traversable TraversableOnce Tuple Unit Vector :: #:: "+"Boolean Byte Character CharSequence Class ClassLoader Cloneable Comparable "+"Compiler Double Exception Float Integer Long Math Number Object Package Pair Process "+"Runtime Runnable SecurityManager Short StackTraceElement StrictMath String "+"StringBuffer System Thread ThreadGroup ThreadLocal Throwable Triple Void"),blockKeywords:t("catch class do else finally for forSome if match switch try while"),atoms:t("true false null"),hooks:{"@":function(e){e.eatWhile(/[\w\$_]/);return"meta"}}});u(["x-shader/x-vertex","x-shader/x-fragment"],{name:"clike",keywords:t("float int bool void "+"vec2 vec3 vec4 ivec2 ivec3 ivec4 bvec2 bvec3 bvec4 "+"mat2 mat3 mat4 "+"sampler1D sampler2D sampler3D samplerCube "+"sampler1DShadow sampler2DShadow"+"const attribute uniform varying "+"break continue discard return "+"for while do if else struct "+"in out inout"),blockKeywords:t("for while do if else struct"),builtin:t("radians degrees sin cos tan asin acos atan "+"pow exp log exp2 sqrt inversesqrt "+"abs sign floor ceil fract mod min max clamp mix step smootstep "+"length distance dot cross normalize ftransform faceforward "+"reflect refract matrixCompMult "+"lessThan lessThanEqual greaterThan greaterThanEqual "+"equal notEqual any all not "+"texture1D texture1DProj texture1DLod texture1DProjLod "+"texture2D texture2DProj texture2DLod texture2DProjLod "+"texture3D texture3DProj texture3DLod texture3DProjLod "+"textureCube textureCubeLod "+"shadow1D shadow2D shadow1DProj shadow2DProj "+"shadow1DLod shadow2DLod shadow1DProjLod shadow2DProjLod "+"dFdx dFdy fwidth "+"noise1 noise2 noise3 noise4"),atoms:t("true false "+"gl_FragColor gl_SecondaryColor gl_Normal gl_Vertex "+"gl_MultiTexCoord0 gl_MultiTexCoord1 gl_MultiTexCoord2 gl_MultiTexCoord3 "+"gl_MultiTexCoord4 gl_MultiTexCoord5 gl_MultiTexCoord6 gl_MultiTexCoord7 "+"gl_FogCoord "+"gl_Position gl_PointSize gl_ClipVertex "+"gl_FrontColor gl_BackColor gl_FrontSecondaryColor gl_BackSecondaryColor "+"gl_TexCoord gl_FogFragCoord "+"gl_FragCoord gl_FrontFacing "+"gl_FragColor gl_FragData gl_FragDepth "+"gl_ModelViewMatrix gl_ProjectionMatrix gl_ModelViewProjectionMatrix "+"gl_TextureMatrix gl_NormalMatrix gl_ModelViewMatrixInverse "+"gl_ProjectionMatrixInverse gl_ModelViewProjectionMatrixInverse "+"gl_TexureMatrixTranspose gl_ModelViewMatrixInverseTranspose "+"gl_ProjectionMatrixInverseTranspose "+"gl_ModelViewProjectionMatrixInverseTranspose "+"gl_TextureMatrixInverseTranspose "+"gl_NormalScale gl_DepthRange gl_ClipPlane "+"gl_Point gl_FrontMaterial gl_BackMaterial gl_LightSource gl_LightModel "+"gl_FrontLightModelProduct gl_BackLightModelProduct "+"gl_TextureColor gl_EyePlaneS gl_EyePlaneT gl_EyePlaneR gl_EyePlaneQ "+"gl_FogParameters "+"gl_MaxLights gl_MaxClipPlanes gl_MaxTextureUnits gl_MaxTextureCoords "+"gl_MaxVertexAttribs gl_MaxVertexUniformComponents gl_MaxVaryingFloats "+"gl_MaxVertexTextureImageUnits gl_MaxTextureImageUnits "+"gl_MaxFragmentUniformComponents gl_MaxCombineTextureImageUnits "+"gl_MaxDrawBuffers"),hooks:{"#":r},modeProps:{fold:["brace","include"]}})})()})